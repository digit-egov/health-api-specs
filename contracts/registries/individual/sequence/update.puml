@startuml Individual Registry - Update
!theme vibrant
participant Client as c
participant IndividualRegistry as ir
participant RedisCache as rc
queue Kafka as k
participant PersisterService as prs
participant IndexerService as idx
participant ErrorService as es
participant ElasticSearch as el
database Database as db
c -> ir : /individual/v1/_update
activate ir
ir -> ir: Validate request body
alt request validation fails
    ir -> ir: Request validation failed
    ir -> k: Individual Data /error_topic
    note left
        This will be marked as unrecoverable right away 
        and require manual intervention
    end note
    activate k
    group async
        es -> k: Consume Individual Data
        activate es
        deactivate k
        es -> db: Persist Individual Data /error_table
        activate db
        deactivate db
        deactivate es
    end
    ir -> c: HttpStatus: 400 with appropriate error code
    note left
      Error Code: REQUEST_VALIDATION_FAILED
    end note
end
ir -> ir: Request validation successful
alt record doesn't exist
    ir -> rc: Fetch the existing record
    activate rc
    rc -> rc: 0 rows
    rc -> db: Fetch the existing record
    activate db
    db -> rc: 0 rows
    deactivate db
    rc -> ir: 0 rows
    deactivate rc
    note left
        This will be marked as unrecoverable right away 
        and require manual intervention
    end note
    ir -> k: Individual Data /error_topic
    group async
        es -> k: Consume Individual Data
        activate es
        deactivate k
        es -> db: Persist Individual Data /error_table
        activate db
        deactivate db
        deactivate es
    end
    ir -> c: HttpStatus: 400 with appropriate error code
    note left
      Error Code: RECORD_NOT_FOUND
    end note
end
alt record doesn't exists in cache
    ir -> rc: Search record based on individualId
    activate rc
    rc -> ir: 0 rows
    deactivate rc
    ir -> db: Search record based on individualId
    activate db
    db -> ir: 1 row
    deactivate db
    ir -> rc: 1 record
    activate rc
    deactivate rc
end
ir -> rc: Fetch the existing record
activate rc
rc -> ir: 1 row
deactivate rc
'ir -> ir: Check if the new record is not equal to existing record
'alt new record equals existing record
'    ir -> ir: New record equals existing record
'    ir -> c: HttpStatus: 202 ACCEPTED with appropriate response code
'end
ir -> k: Individual Data /update_topic
activate k
ir -> rc: Update new record in cache against individualId
activate rc
deactivate rc
ir -> c: HttpStatus: 202 ACCEPTED
deactivate ir
group async
    prs -> k: Consume Individual Data
    activate prs
    idx -> k: Consume Individual Data
    activate idx
    idx -> el: Store Individual Data
    activate el
    deactivate el
    deactivate idx
    prs -> db: Update Individual Data
    activate db
    deactivate db
    deactivate prs
end
deactivate k
@enduml