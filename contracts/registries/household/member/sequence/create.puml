@startuml
title Household Member - Create
!theme vibrant
participant Client as c
participant HouseholdRegistry as s
participant IndividualRegistry as s2
participant RedisCache as rc
queue Kafka as k
participant PersisterService as prs
participant IndexerService as idx
participant ErrorService as es
participant ElasticSearch as el
database Database as db
c -> s : /household/member/v1/_create
activate s
s -> s: Validate request body
alt request validation fails
    s -> s: Request validation failed
    s -> k: Household Member Data /error_topic
    note left
        This will be marked as unrecoverable right away 
        and require manual intervention
    end note
    activate k
    group async
        es -> k: Consume Household Member Data
        activate es
        deactivate k
        es -> db: Persist Household Member Data /error_table
        activate db
        deactivate db
        deactivate es
    end
    s -> c: HttpStatus: 400 with appropriate error code
    note left
        Error Code: REQUEST_VALIDATION_FAILED
    end note
end
s -> s: Request validation successful
alt household member record already exists
    alt record found in cache
      s -> rc: Check using household clientReferenceId / serverGeneratedId
      activate rc
      rc -> s: 1 row
      deactivate rc
      s -> c: HttpStatus: 400 with appropriate error code
      note left
          Error Code: RECORD_ALREADY_EXISTS
      end note
    end
    s -> rc: Check using household clientReferenceId / serverGeneratedId
    activate rc
    rc -> s: 0 rows
    deactivate rc
    s -> db: Check if record already exists
    activate db
    db -> s: 1 row
    deactivate db
    s -> rc: Put data in cache using household clientReferenceId / serverGeneratedId
    activate rc
    deactivate rc
    s -> c: HttpStatus: 400 with appropriate error code
    note left
        Error Code: RECORD_ALREADY_EXISTS
    end note
end
'alt household doesn't exist
'    s -> db: Check if household exists
'    activate db
'    db -> s: 0 rows
'    deactivate db
'    s -> k: Household Member Data /error_topic
'    note left
'        This will be marked as recoverable and will be
'        retried later
'    end note
'    activate k
'    group async
'        es -> k: Consume Household Member Data
'        activate es
'        deactivate k
'        es -> db: Persist Household Member Data /error_table
'        activate db
'        deactivate db
'        deactivate es
'    end
'    s -> c: HttpStatus: 400 with appropriate error code
'    note left
'        Error Code: DEPENDENCY_ERROR
'    end note
'end
alt individual doesn't exist
    s -> s2: /individual/v1/_search
    activate s2
    s2 -> s: 0 rows
    deactivate s2
    s -> k: Household Member Data /error_topic
    note left
        This will be marked as recoverable and will be 
        retried later
    end note
    activate k
    group async
        es -> k: Consume Household Member Data
        activate es
        deactivate k
        es -> db: Persist Household Member Data /error_table
        activate db
        deactivate db
        deactivate es
    end
    s -> c: HttpStatus: 400 with appropriate error code
    note left
        Error Code: DEPENDENCY_ERROR
    end note
end
s -> db: Get Individual/Household mapping using individual clientReferenceId/serverGeneratedId
activate db
alt record found
  db -> s: 1 row
  s -> c: HttpStatus: 400 with appropriate error code
  note left
      Error Code: BAD_REQUEST
      Ensures that the individual is not already linked to a household
  end note
end
db -> s: 0 rows
deactivate db
s -> s: Check if isHeadOfHousehold is true in request
alt request isHeadOfHousehold true
  s -> db: Get Individual/Household mapping using household clientReferenceId/serverGeneratedId
  activate db
  db -> s: 1-n row(s)
  deactivate db
  alt record with isHeadOfHousehold true found
    s -> s: Check if there is already a record with isHeadOfHousehold true
    s -> c: HttpStatus: 400 with appropriate error code
    note left
        Error Code: BAD_REQUEST
    end note
  end
end

s -> k: Household Member Data /persist_topic
activate k
s -> rc: Invalidate household cache using clientReferenceId/serverGeneratedId
note left
  The request does not have all the data required to update
  the household cache for which this member is being added
  and hence is being invalidated.
end note
activate rc
deactivate rc
s -> c: HttpStatus: 202 ACCEPTED
deactivate s
group async
    prs -> k: Consume Household Member Data
    activate prs
    idx -> k: Consume Household Member Data
    activate idx
    idx -> el: Store Household Member Data
    activate el
    deactivate el
    deactivate idx
    prs -> db: Persist Household Member Data
    activate db
    deactivate db
    deactivate prs
end
deactivate k
@enduml