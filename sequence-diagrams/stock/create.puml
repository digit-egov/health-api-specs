@startuml
title Stock - Create
!theme vibrant
participant Client as c
participant StockService as s
participant RedisCache as rc
participant FacilityRegistry as s2
participant ProductRegistry as s3
participant IDGenService as idgen
queue Kafka as k
participant PersisterService as prs
participant IndexerService as idx
participant ErrorService as es
participant ElasticSearch as el
database Database as db
c -> s : /stock/v1/_create
activate s
s -> s: Validate request body
alt request validation fails
    s -> s: Request validation failed
    s -> k: Stock Data /error_topic
    note left
        This will be marked as unrecoverable right away 
        and require manual intervention
    end note
    activate k
    group async
        es -> k: Consume Stock Data
        activate es
        deactivate k
        es -> db: Persist Stock Data /error_table
        activate db
        deactivate db
        deactivate es
    end
    s -> c: HttpStatus: 400 with appropriate error code
    note left
      Error Code: REQUEST_VALIDATION_FAILED
    end note
end
s -> s: Request validation successful
alt record already exists
    alt record found in cache
      s -> rc: Check using clientReferenceId/serverGeneratedId
      activate rc
      rc -> s: 1 row
      deactivate rc
      s -> c: HttpStatus: 400 with appropriate error code
      note left
          Error Code: RECORD_ALREADY_EXISTS
      end note
    end
    s -> rc: Check using clientReferenceId/serverGeneratedId
    activate rc
    rc -> s: 0 rows
    deactivate rc
    s -> db: Check if record already exists
    activate db
    db -> s: 1 row
    deactivate db
    s -> rc: Put data in cache using clientReferenceId/serverGeneratedId
    activate rc
    deactivate rc
    s -> c: HttpStatus: 400 with appropriate error code
    note left
        Error Code: RECORD_ALREADY_EXISTS
    end note
end
alt facility invalid
    s -> s2: /facility/v1/_search
    activate s2
    s2 -> s: 0 rows
    deactivate s2
    s -> k: Stock Data /error_topic
    note left
        This will be marked as unrecoverable right away
        and require manual intervention
    end note
    activate k
    group async
        es -> k: Consume Stock Data
        activate es
        deactivate k
        es -> db: Persist Stock Data /error_table
        activate db
        deactivate db
        deactivate es
    end
    s -> c: HttpStatus: 400 with appropriate error code
    note left
      Error Code: BAD_REQUEST
    end note
end
s -> s2: /facility/v1/_search
activate s2
s2 -> s: 1 row
deactivate s2
alt productVariantId invalid
    s -> s3: Check if productVariantId exists
    activate s3
    s3 -> s: 0 rows
    deactivate s3
    s -> k: Stock Data /error_topic
    note left
        This will be marked as unrecoverable right away
        and require manual intervention
    end note
    activate k
    group async
        es -> k: Consume Stock Data
        activate es
        deactivate k
        es -> db: Persist Stock Data /error_table
        activate db
        deactivate db
        deactivate es
    end
    s -> c: HttpStatus: 400 with appropriate error code
    note left
      Error Code: BAD_REQUEST
    end note
end
s -> s3: Check if productVariantId exists
activate s3
s3 -> s: 1 row
deactivate s3
alt id generation fails
    s -> idgen: /id/_generate
    activate idgen
    idgen -> s: HttpStatus: 400
    deactivate idgen
    s -> k: Stock Data /error_topic
    note left
        This will be marked as recoverable and 
        will be retried later
    end note
    activate k
    group async
        es -> k: Consume Stock Data
        activate es
        deactivate k
        es -> db: Persist Stock Data /error_table
        activate db
        deactivate db
        deactivate es
    end
    s -> c: HttpStatus: 500 with appropriate error code
    note left
      Error Code: ID_GENERATION_FAILED
    end note
end
s -> idgen: Generate ID
activate idgen
idgen -> s: Generated ID
deactivate idgen
s -> s: Update generated ID in Stock Data
s -> k: Stock Data /persist_topic
activate k
s -> rc: Put Stock Data against clientReferenceId/serverGeneratedId in cache
activate rc
deactivate rc
s -> c: HttpStatus: 202 ACCEPTED
deactivate s
group async
    prs -> k: Consume Stock Data
    activate prs
    idx -> k: Consume Stock Data
    activate idx
    idx -> el: Store Stock Data
    activate el
    deactivate el
    deactivate idx
    prs -> db: Persist Stock Data
    activate db
    deactivate db
    deactivate prs
end
deactivate k
@enduml